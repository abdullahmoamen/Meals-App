{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\React_course_UDEMY-resources\\\\meal\\\\src\\\\components\\\\Meals\\\\AvaliableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './AvaliableMeals.module.css';\nimport Card from '../Ui/Card';\nimport MealItem from './MealItem/MealItem'; // const DUMMY_MEALS = [\n//     {\n//     id: 'm2',\n//     name: 'kosharee',\n//     description: 'A Egyptian specialty!',\n//     price: 10.00,\n//     },\n//     {\n//     id: 'm1',\n//     name: 'Sushi',\n//     description: 'Finest fish and veggies',\n//     price: 23.49,\n//     },\n//     {\n//     id: 'm3',\n//     name: 'Barbecue Burger',\n//     description: 'American, raw, meaty',\n//     price: 12.99,\n//     },\n//     {\n//     id: 'm4',\n//     name: 'Green Bowl',\n//     description: 'Healthy...and green...',\n//     price: 18.99,\n//     },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AvaliableMeals() {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading;\n\n    const fetchMeals = async () => {\n      const response = await fetch('https://meals-7c8f6-default-rtdb.firebaseio.com/meals.json');\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          discription: responseData[key].discription,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    };\n\n    fetchMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meals.map(meal => {\n          return /*#__PURE__*/_jsxDEV(MealItem, {\n            id: meal.id,\n            name: meal.name,\n            description: meal.description,\n            price: meal.price\n          }, meal.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AvaliableMeals, \"X4UGABiTAvwBbHKNNhAiWWaGl7I=\");\n\n_c = AvaliableMeals;\nexport default AvaliableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvaliableMeals\");","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/src/components/Meals/AvaliableMeals.js"],"names":["React","useEffect","useState","classes","Card","MealItem","AvaliableMeals","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","discription","price","map","meal","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAAyBR,QAAQ,CAAC,KAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,YAAY;;AACZ,UAAMC,UAAU,GAAG,YAAU;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAE,EAAnB;;AAEA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC1BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,UAAAA,EAAE,EAACF,GADU;AAEbG,UAAAA,IAAI,EAACN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFV;AAGbC,UAAAA,WAAW,EAACP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHjB;AAIbC,UAAAA,KAAK,EAACR,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJX,SAAjB;AAOH;;AACDd,MAAAA,QAAQ,CAACQ,WAAD,CAAR;AACH,KAhBD;;AAiBAL,IAAAA,UAAU;AACb,GApBQ,EAoBP,EApBO,CAAT;AAsBA,sBACI;AAAS,IAAA,SAAS,EAAER,OAAO,CAACI,KAA5B;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBACKA,KAAK,CAACgB,GAAN,CAAWC,IAAI,IAAE;AACd,8BACA,QAAC,QAAD;AACA,YAAA,EAAE,EAAEA,IAAI,CAACL,EADT;AAGA,YAAA,IAAI,EAAEK,IAAI,CAACJ,IAHX;AAIA,YAAA,WAAW,EAAEI,IAAI,CAACC,WAJlB;AAKA,YAAA,KAAK,EAAED,IAAI,CAACF;AALZ,aAEKE,IAAI,CAACL,EAFV;AAAA;AAAA;AAAA;AAAA,kBADA;AAUH,SAXA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA/CQb,c;;KAAAA,c;AAiDT,eAAeA,cAAf","sourcesContent":["import React , {useEffect,useState} from 'react';\r\nimport classes from './AvaliableMeals.module.css';\r\nimport Card from '../Ui/Card';\r\nimport MealItem from './MealItem/MealItem';\r\n\r\n\r\n// const DUMMY_MEALS = [\r\n//     {\r\n//     id: 'm2',\r\n//     name: 'kosharee',\r\n//     description: 'A Egyptian specialty!',\r\n//     price: 10.00,\r\n//     },\r\n//     {\r\n//     id: 'm1',\r\n//     name: 'Sushi',\r\n//     description: 'Finest fish and veggies',\r\n//     price: 23.49,\r\n//     },\r\n//     {\r\n//     id: 'm3',\r\n//     name: 'Barbecue Burger',\r\n//     description: 'American, raw, meaty',\r\n//     price: 12.99,\r\n//     },\r\n//     {\r\n//     id: 'm4',\r\n//     name: 'Green Bowl',\r\n//     description: 'Healthy...and green...',\r\n//     price: 18.99,\r\n//     },\r\n// ];\r\n\r\nfunction AvaliableMeals() {\r\n\r\n    const [meals,setMeals]=useState([]);\r\n    const [isLoading,setIsLoading]=useState(false);\r\n\r\n    useEffect(()=>{\r\n        setIsLoading\r\n        const fetchMeals = async ()=>{\r\n            const response = await fetch('https://meals-7c8f6-default-rtdb.firebaseio.com/meals.json');\r\n            const responseData = await response.json();\r\n\r\n            const loadedMeals =[]\r\n\r\n            for(const key in responseData){\r\n                loadedMeals.push({\r\n                    id:key,\r\n                    name:responseData[key].name,\r\n                    discription:responseData[key].discription,\r\n                    price:responseData[key].price\r\n                })\r\n\r\n            }\r\n            setMeals(loadedMeals)\r\n        }\r\n        fetchMeals()\r\n    },[])\r\n\r\n    return (\r\n        <section className={classes.meals}>\r\n            <Card>\r\n                <ul>\r\n                    {meals.map((meal=>{\r\n                        return( \r\n                        <MealItem\r\n                        id={meal.id}\r\n                        key={meal.id}\r\n                        name={meal.name}\r\n                        description={meal.description}\r\n                        price={meal.price}\r\n                        \r\n                        />\r\n                        )\r\n                    }))}\r\n                </ul>\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AvaliableMeals\r\n"]},"metadata":{},"sourceType":"module"}