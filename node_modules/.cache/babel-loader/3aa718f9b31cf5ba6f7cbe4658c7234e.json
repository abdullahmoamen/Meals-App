{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\React_course_UDEMY-resources\\\\meal\\\\src\\\\components\\\\Cart\\\\CheckOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './CheckOut.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = val => val.trim() === '' || val.trim() === ' ';\n\nconst isFiveChars = val => val.trim().length === 5;\n\nconst CheckOut = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = e => {\n    e.preventDefault();\n    const enterdName = nameInputRef.current.value;\n    const enterdStreet = streetInputRef.current.value;\n    const enterdPostalCode = postalCodeInputRef.current.value;\n    const enterdCity = cityInputRef.current.value;\n    const enterdNameIsValid = !isEmpty(enterdName);\n    const enterdStreetIsValid = !isEmpty(enterdStreet);\n    const enterdCityIsValid = !isEmpty(enterdCity);\n    const enterdPostalCodeIsValid = isFiveChars(enterdPostalCode);\n    setFormInputsValidity({\n      name: enterdNameIsValid,\n      street: enterdStreetIsValid,\n      postalCode: enterdPostalCodeIsValid,\n      city: enterdCityIsValid\n    });\n    const formIsValid = enterdNameIsValid && enterdStreetIsValid && enterdCityIsValid && enterdPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enterdName,\n      street: enterdStreet,\n      city: enterdCity,\n      postalCode: enterdPostalCode\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `control ${formInputsValidity.name ? '' : 'invalid'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"User Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter Valid Name !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `control ${formInputsValidity.street ? '' : 'invalid'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter Valid street !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `control ${formInputsValidity.postalCode ? '' : 'invalid'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postl Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter Valid postalCode !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `control ${formInputsValidity.city ? '' : 'invalid'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter Valid city !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"CONFIRM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"actions\",\n        onClick: props.onCancel,\n        type: \"button\",\n        children: \"CANCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckOut, \"v3GaxMCJWMl0za4Lsz0YUao5eTM=\");\n\n_c = CheckOut;\nexport default CheckOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckOut\");","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/src/components/Cart/CheckOut.js"],"names":["React","useRef","useState","isEmpty","val","trim","isFiveChars","length","CheckOut","props","formInputsValidity","setFormInputsValidity","name","street","postalCode","city","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","e","preventDefault","enterdName","current","value","enterdStreet","enterdPostalCode","enterdCity","enterdNameIsValid","enterdStreetIsValid","enterdCityIsValid","enterdPostalCodeIsValid","formIsValid","onConfirm","onCancel"],"mappings":"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","sourcesContent":["import React ,{useRef,useState} from 'react';\r\nimport  './CheckOut.css';\r\n\r\nconst isEmpty = val => val.trim() === '' || val.trim() === ' ' ;\r\nconst isFiveChars = val=>val.trim().length === 5; \r\n\r\nconst CheckOut=(props)=> {\r\n\r\n    const [formInputsValidity,setFormInputsValidity]=useState({\r\n        name:true,\r\n        street:true,\r\n        postalCode:true,\r\n        city:true,\r\n    });\r\n\r\n    const nameInputRef=useRef();\r\n    const streetInputRef=useRef();\r\n    const postalCodeInputRef=useRef();\r\n    const cityInputRef=useRef();\r\n\r\n    const confirmHandler=(e)=>{\r\n        e.preventDefault();\r\n\r\n        const enterdName=nameInputRef.current.value;\r\n        const enterdStreet=streetInputRef.current.value;\r\n        const enterdPostalCode=postalCodeInputRef.current.value;\r\n        const enterdCity=cityInputRef.current.value;\r\n\r\n        const enterdNameIsValid=!isEmpty(enterdName);\r\n        const enterdStreetIsValid=!isEmpty(enterdStreet);\r\n        const enterdCityIsValid=!isEmpty(enterdCity);\r\n        const enterdPostalCodeIsValid=isFiveChars(enterdPostalCode);\r\n\r\n        setFormInputsValidity({\r\n            name:enterdNameIsValid,\r\n            street:enterdStreetIsValid,\r\n            postalCode:enterdPostalCodeIsValid,\r\n            city:enterdCityIsValid\r\n        })\r\n\r\n        const formIsValid= \r\n        enterdNameIsValid && enterdStreetIsValid && \r\n        enterdCityIsValid && enterdPostalCodeIsValid;\r\n\r\n        if(! formIsValid) {\r\n            return;\r\n        }\r\n\r\n        props.onConfirm({\r\n            name:enterdName,\r\n            street:enterdStreet,\r\n            city:enterdCity,\r\n            postalCode:enterdPostalCode,\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <form onSubmit={confirmHandler} className='form'>\r\n            <div className={`control ${formInputsValidity.name ? '' : 'invalid'}`}>\r\n                <label htmlFor=\"name\">User Name</label>\r\n                <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n                {!formInputsValidity.name && <p>Please Enter Valid Name !!</p>}\r\n            </div>\r\n            \r\n            <div className={`control ${formInputsValidity.street ? '' : 'invalid'}`}>\r\n                <label htmlFor=\"street\">Street</label>\r\n                <input type=\"text\" id=\"street\" ref={streetInputRef}  />\r\n                {!formInputsValidity.street && <p>Please Enter Valid street !!</p>}\r\n            </div>\r\n            \r\n            <div className={`control ${formInputsValidity.postalCode ? '' : 'invalid'}`}>\r\n                <label htmlFor=\"postal\">Postl Code</label>\r\n                <input type=\"text\" id=\"postal\" ref={postalCodeInputRef}  />\r\n                {!formInputsValidity.postalCode && <p>Please Enter Valid postalCode !!</p>}\r\n            </div>\r\n            \r\n            <div className={`control ${formInputsValidity.city ? '' : 'invalid'}`}>\r\n                <label htmlFor=\"city\">City</label>\r\n                <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n                {!formInputsValidity.city && <p>Please Enter Valid city !!</p>}\r\n            </div>\r\n\r\n            <div className=\"actions\">\r\n            <button type=\"submit\" >CONFIRM</button>\r\n            <button className='actions' onClick={props.onCancel} type='button'>CANCEL</button>\r\n            </div>\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nexport default CheckOut\r\n"]},"metadata":{},"sourceType":"module"}