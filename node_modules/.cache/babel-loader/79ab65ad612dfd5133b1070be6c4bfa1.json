{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\React_course_UDEMY-resources\\\\meal\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItems = state.items[existingItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItems) {\n      updatedItems = { ...existingCartItems,\n        amount: existingCartItems.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nexport default function CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'Remove',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedAmount","item","price","amount","existingItemIndex","findIndex","id","existingCartItems","updatedItem","updatedItems","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAE/B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,aAAa,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA1E;AAEA,UAAMC,iBAAiB,GAACP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAApD,CAAxB;AACA,UAAMC,iBAAiB,GAAGV,KAAK,CAACH,KAAN,CAAYU,iBAAZ,CAA1B;AACA,QAAII,WAAJ;AACA,QAAIC,YAAJ;;AAEA,QAAGF,iBAAH,EAAqB;AACjBE,MAAAA,YAAY,GAAC,EACT,GAAGF,iBADM;AAETJ,QAAAA,MAAM,EAAEI,iBAAiB,CAACJ,MAAlB,GAA2BL,MAAM,CAACG,IAAP,CAAYE;AAFtC,OAAb;AAIAM,MAAAA,YAAY,GAAC,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAb;AACAe,MAAAA,YAAY,CAACL,iBAAD,CAAZ,GAAgCI,WAAhC;AACH;;AAGD,WAAM;AACFd,MAAAA,KAAK,EAACe,YADJ;AAEFd,MAAAA,WAAW,EAACK;AAFV,KAAN;AAIH;;AAED,SAAOP,gBAAP;AACH,CA3BD;;AA6BA,eAAe,SAASiB,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACxC,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAAiCtB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAjD;;AAEA,QAAMqB,cAAc,GAAEb,IAAD,IAAQ;AACzBY,IAAAA,kBAAkB,CAAC;AAACd,MAAAA,IAAI,EAAE,KAAP;AAAaE,MAAAA,IAAI,EAAEA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMc,iBAAiB,GAAET,EAAD,IAAM;AAC1BO,IAAAA,kBAAkB,CAAC;AAACd,MAAAA,IAAI,EAAE,QAAP;AAAgBO,MAAAA,EAAE,EAAEA;AAApB,KAAD,CAAlB;AAEH,GAHD;;AAIA,QAAMU,WAAW,GAAC;AACdtB,IAAAA,KAAK,EAACkB,SAAS,CAAClB,KADF;AAEdC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFT;AAGdsB,IAAAA,OAAO,EAAEH,cAHK;AAIdI,IAAAA,UAAU,EAAEH;AAJE,GAAlB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtBuBT,Y;;KAAAA,Y","sourcesContent":["import React ,{useReducer} from 'react';\r\nimport CartContext from './CartContext';\r\n\r\nconst defaultCartState={\r\n    items: [],\r\n    totalAmount:0\r\n};\r\n\r\nconst cartReducer =(state,action)=>{\r\n\r\n    if(action.type==='ADD'){\r\n        const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingItemIndex=state.items.findIndex(item=>item.id === action.item.id);\r\n        const existingCartItems = state.items[existingItemIndex];\r\n        let updatedItem;\r\n        let updatedItems;\r\n        \r\n        if(existingCartItems){\r\n            updatedItems={\r\n                ...existingCartItems,\r\n                amount: existingCartItems.amount + action.item.amount\r\n            };\r\n            updatedItems=[...state.items];\r\n            updatedItems[existingItemIndex]=updatedItem\r\n        }\r\n\r\n        \r\n        return{\r\n            items:updatedItems,\r\n            totalAmount:updatedAmount\r\n        }\r\n    }\r\n\r\n    return defaultCartState\r\n}\r\n\r\nexport default function CartProvider(props) {\r\n    const [cartState,dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n\r\n    const addItemHandler=(item)=>{\r\n        dispatchCartAction({type: 'ADD',item: item})\r\n    }\r\n    const removeItemHandler=(id)=>{\r\n        dispatchCartAction({type: 'Remove',id: id})\r\n\r\n    }\r\n    const cartContext={\r\n        items:cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}