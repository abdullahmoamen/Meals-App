{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\React_course_UDEMY-resources\\\\meal\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItems = state.items[existingItemIndex];\n    let updatedItems;\n\n    if (existingCartItems) {\n      const updatedItem = { ...existingCartItems,\n        amount: existingCartItems.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      // updatedItem={...action.item};\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nexport default function CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedAmount","item","price","amount","existingItemIndex","findIndex","id","existingCartItems","updatedItems","updatedItem","concat","existingItem","updatedTotalAmount","filter","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import React ,{useReducer} from 'react';\r\nimport CartContext from './CartContext';\r\n\r\nconst defaultCartState={\r\n    items: [],\r\n    totalAmount:0\r\n};\r\n\r\nconst cartReducer =(state,action)=>{\r\n\r\n    if(action.type === 'ADD'){\r\n        const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingItemIndex=state.items.findIndex(item=>item.id === action.item.id);\r\n        const existingCartItems = state.items[existingItemIndex];\r\n        let updatedItems;\r\n        \r\n        if(existingCartItems){\r\n            const updatedItem={\r\n                ...existingCartItems,\r\n                amount: existingCartItems.amount + action.item.amount\r\n            };\r\n            updatedItems=[...state.items];\r\n            updatedItems[existingItemIndex]=updatedItem;\r\n        }else{\r\n            // updatedItem={...action.item};\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n        \r\n        return{\r\n            items:updatedItems,\r\n            totalAmount:updatedAmount\r\n        }\r\n    }\r\n    if(action.type === 'REMOVE'){\r\n        const existingItemIndex=state.items.findIndex(\r\n            item=>item.id === action.id);\r\n            const existingItem = state.items[existingItemIndex];\r\n            const updatedTotalAmount =state.totalAmount - existingItem.price;\r\n            let updatedItems;\r\n            if(existingItem.amount === 1){\r\n                updatedItems=state.items.filter(item => item.id !== action.id)\r\n            } else{\r\n                const updatedItem = {...existingItem , amount: existingItem.amount-1};\r\n                updatedItems=[...state.items]\r\n                updatedItems[existingItemIndex]=updatedItem\r\n            }\r\n            return{\r\n                items: updatedItems,\r\n                totalAmount:updatedTotalAmount\r\n            }\r\n    }\r\n\r\n    if(action.type==='CLEAR'){\r\n        return defaultCartState\r\n    }\r\n\r\n    return defaultCartState\r\n}\r\n\r\nexport default function CartProvider(props) {\r\n    const [cartState,dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n\r\n    const addItemHandler=(item)=>{\r\n        dispatchCartAction({type: 'ADD',item: item})\r\n    }\r\n    const removeItemHandler=(id)=>{\r\n        dispatchCartAction({type: 'REMOVE',id: id})\r\n\r\n    }\r\n    const cartContext={\r\n        items:cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}