{"ast":null,"code":"import _slicedToArray from\"C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer}from'react';import CartContext from'./CartContext';import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type==='ADD'){var updatedAmount=state.totalAmount+action.item.price*action.item.amount;var existingItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItems=state.items[existingItemIndex];var updatedItems;if(existingCartItems){var updatedItem=_objectSpread(_objectSpread({},existingCartItems),{},{amount:existingCartItems.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingItemIndex]=updatedItem;}else{// updatedItem={...action.item};\nupdatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedAmount};}if(action.type==='REMOVE'){var _existingItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var existingItem=state.items[_existingItemIndex];var updatedTotalAmount=state.totalAmount-existingItem.price;var _updatedItems;if(existingItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amount:existingItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:updatedTotalAmount};}if(action.type==='CLEAR'){return defaultCartState;}return defaultCartState;};export default function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemHandler=function addItemHandler(item){dispatchCartAction({type:'ADD',item:item});};var removeItemHandler=function removeItemHandler(id){dispatchCartAction({type:'REMOVE',id:id});};var clearCartHandler=function clearCartHandler(){dispatchCartAction({type:'CLEAR'});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemHandler,removeItem:removeItemHandler,clearCart:clearCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});}","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/React_course_UDEMY-resources/meal/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedAmount","item","price","amount","existingItemIndex","findIndex","id","existingCartItems","updatedItems","updatedItem","concat","existingItem","updatedTotalAmount","filter","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","children"],"mappings":"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","sourcesContent":["import React ,{useReducer} from 'react';\r\nimport CartContext from './CartContext';\r\n\r\nconst defaultCartState={\r\n    items: [],\r\n    totalAmount:0\r\n};\r\n\r\nconst cartReducer =(state,action)=>{\r\n\r\n    if(action.type === 'ADD'){\r\n        const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingItemIndex=state.items.findIndex(item=>item.id === action.item.id);\r\n        const existingCartItems = state.items[existingItemIndex];\r\n        let updatedItems;\r\n        \r\n        if(existingCartItems){\r\n            const updatedItem={\r\n                ...existingCartItems,\r\n                amount: existingCartItems.amount + action.item.amount\r\n            };\r\n            updatedItems=[...state.items];\r\n            updatedItems[existingItemIndex]=updatedItem;\r\n        }else{\r\n            // updatedItem={...action.item};\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n        \r\n        return{\r\n            items:updatedItems,\r\n            totalAmount:updatedAmount\r\n        }\r\n    }\r\n    if(action.type === 'REMOVE'){\r\n        const existingItemIndex=state.items.findIndex(\r\n            item=>item.id === action.id);\r\n            const existingItem = state.items[existingItemIndex];\r\n            const updatedTotalAmount =state.totalAmount - existingItem.price;\r\n            let updatedItems;\r\n            if(existingItem.amount === 1){\r\n                updatedItems=state.items.filter(item => item.id !== action.id)\r\n            } else{\r\n                const updatedItem = {...existingItem , amount: existingItem.amount-1};\r\n                updatedItems=[...state.items]\r\n                updatedItems[existingItemIndex]=updatedItem\r\n            }\r\n            return{\r\n                items: updatedItems,\r\n                totalAmount:updatedTotalAmount\r\n            }\r\n    }\r\n\r\n    if(action.type==='CLEAR'){\r\n        return defaultCartState;\r\n    }\r\n\r\n    return defaultCartState\r\n}\r\n\r\nexport default function CartProvider(props) {\r\n    const [cartState,dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n\r\n    const addItemHandler=(item)=>{\r\n        dispatchCartAction({type: 'ADD',item: item})\r\n    }\r\n\r\n    const removeItemHandler=(id)=>{\r\n        dispatchCartAction({type: 'REMOVE',id: id})\r\n    }\r\n\r\n    const clearCartHandler=()=>{\r\n        dispatchCartAction({type: 'CLEAR' })\r\n    }  \r\n\r\n    const cartContext={\r\n        items:cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler,\r\n        clearCart: clearCartHandler\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}